Q. 1) Write a Javascript program to accept name of student, change font color to
red, font size to 18 if student name is present otherwise on clicking on empty
text box display image which changes its size (Use onblur, onload, onmousehover,
onmouseclick, onmouseup)

<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Student Details</title>
  </head>
  <body>
    <h2>Enter Student Name</h2>
    <input
      type="text"
      id="studentName"
      placeholder="Enter name"
      onblur="checkName()"
      onclick="showImage()"
    />

    <br /><br />

    <img
      id="studentImage"
      src="https://imgs.search.brave.com/NrlZu-RbjGqH--zt6qRLLqua63hgRZuuRQziGS5ua1U/rs:fit:500:0:0:0/g:ce/aHR0cHM6Ly9waXhs/ci5jb20vaW1hZ2Vz/L2luZGV4L2FpLWlt/YWdlLWdlbmVyYXRv/ci1vbmUud2VicA"
      style="display: none; width: 150px; height: 150px"
      onmouseover="this.style.width='200px'"
      onmouseout="this.style.width='150px'"
    />

    <script>
      function checkName() {
        var name = document.getElementById("studentName").value;
        if (name) {
          document.getElementById("studentName").style.color = "red";
          document.getElementById("studentName").style.fontSize = "18px";
        }
      }

      function showImage() {
        if (!document.getElementById("studentName").value.trim()) {
          document.getElementById("studentImage").style.display = "block";
        }
      }
    </script>
  </body>
</html>

Q. 2)Create the following dataset in python & Convert the categorical values
into numeric format.Apply the apriori algorithm on the above dataset to generate
the frequent itemsets and associationrules. Repeat the process with different
min_sup values. import pandas as pd from mlxtend.preprocessing import
TransactionEncoder from mlxtend.frequent_patterns import apriori,
association_rules transactions = [ ['butter', 'bread', 'milk'], ['butter',
'flour', 'milk', 'sugar'], ['butter', 'eggs', 'milk', 'salt'], ['eggs'],
['butter', 'flour', 'milk', 'salt'] ] te = TransactionEncoder() df =
pd.DataFrame(te.fit_transform(transactions), columns=te.columns_) min_sup_values
= [0.2, 0.4, 0.6] for min_sup in min_sup_values: print(f"\nMin Support:
{min_sup}") freq_items = apriori(df, min_support=min_sup, use_colnames=True)
rules = association_rules(freq_items, metric="lift", min_threshold=1)
print("\nFrequent Itemsets:\n", freq_items) print("\nAssociation Rules:\n",
rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']])
