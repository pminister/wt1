Q. 1) Write Ajax program to get book details from XML file when user select a
book name. Create XML file for storing details of book(title, author, year,
price). //books.xml
<books>
  <book>
    <title>Introduction to Algorithms</title>
    <author>Thomas H. Cormen</author>
    <year>2009</year>
    <price>$45</price>
  </book>
  <book>
    <title>Clean Code</title>
    <author>Robert C. Martin</author>
    <year>2008</year>
    <price>$40</price>
  </book>
  <book>
    <title>Design Patterns</title>
    <author>Erich Gamma</author>
    <year>1994</year>
    <price>$50</price>
  </book>
</books>

//slip16.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <h1>Book Details Finder</h1>
    Select a Book:
    <select id="bookSelect" onchange="getBookDetails()">
      <option value="">-- Select a Book --</option>
      <option value="Introduction to Algorithms">
        Introduction to Algorithms
      </option>
      <option value="Clean Code">Clean Code</option>
      <option value="Design Patterns">Design Patterns</option>
    </select>
    <h3>Book Details:</h3>
    <div id="bookDetails"></div>
    <script>
      function getBookDetails() {
        const selectedbook = document.getElementById("bookSelect").value;
        const bookdetails = document.getElementById("bookDetails");
        const xhr = new XMLHttpRequest();
        xhr.open("GET", "book.xml", true);
        xhr.onload = function () {
          if (xhr.status === 200) {
            const xmldoc = xhr.responseXML;
            const book = xmldoc.getElementsByTagName("book");
            for (var i = 0; i < book.length; i++) {
              const title =
                book[i].getElementsByTagName("title")[0].textContent;
              if (title === selectedbook) {
                const author =
                  book[i].getElementsByTagName("author")[0].textContent;
                const year =
                  book[i].getElementsByTagName("year")[0].textContent;
                const price =
                  book[i].getElementsByTagName("price")[0].textContent;
                bookdetails.innerHTML = `${title}<br>${author}<br>${year}<br> ${price} <br>`;
              }
            }
          } else {
            bookdetails.innerHTML = "error";
          }
        };
        xhr.send();
      }
    </script>
  </body>
</html>

Q. 2)Consider any text paragraph. Preprocess the text to remove any special
characters and digits. Generate the summary using extractive summarization
process import re, nltk from nltk.tokenize import sent_tokenize from collections
import Counter nltk.download('punkt') text = "AI is transforming the world. It
is used in healthcare, education, and finance. AI automates tasks and improves
efficiency. Ethical concerns remain a challenge." text = re.sub(r'[^a-zA-Z\s]',
'', text) sentences = sent_tokenize(text) word_freq =
Counter(text.lower().split()) summary = sorted(sentences, key=lambda s:
sum(word_freq[w] for w in s.lower().split()), reverse=True)[:2]
print("Summary:", ' '.join(summary))
