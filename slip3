Q. 1) Write a PHP script to accept username and password. If in the first three chances, username and
      password entered is correct then display second form with “Welcome message” otherwise display error
      message. [Use Session]


//slip22.php

<?php

Session_start();

if(isset($_POST['submit'])){

$username=$_POST['user'];
$password=$_POST['pass'];


$correct_username='ani';
$correct_password='ani12';

if($username==$correct_username && $password==$correct_password){


header('location:slip2.html');
Exit;
}
else{

if(isset($_SESSION['attempts']))
{
$_SESSION['attempts']--;
}
else
{
$_SESSION['attempts']=20;
}

if($_SESSION['attempts']<=0)
{
echo" Maximum login attempts exceeded.Please try again later.";
}
else
{

echo"Invalidusernameorpassword.Youhave".$_SESSION['attempts']."Attempt(s)left.";
}
}
}
?>



//slip2.html

<!DOCTYPE html>
<html>
<head>
<title>slip 3</title>
</head>
<body>
<p>enter username and password</p>
<form action="slip3.php" method="post">
<input type="text" name="user" placeholder="username">
<input type="text" name="pass" placeholder="password">
<input type="submit" name="submit">
</form>
</body>
<html>






Q. 2)Create ‘User’ Data set having 5 columns namely: User ID, Gender, Age, Estimated Salary and 
     Purchased. Build a logistic regression model that can predict whether on the given parameter a person 
     will buy a car or not.    
     

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

data = {
    'UserID': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    'Gender': ['Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female'],
    'Age': [19, 35, 26, 27, 19, 27, 32, 25, 33, 45],
    'EstimatedSalary': [19000, 20000, 43000, 57000, 76000, 58000, 82000, 32000, 69000, 65000],
    'Purchased': [0, 0, 0, 1, 1, 0, 1, 0, 1, 1]
}

df = pd.DataFrame(data)
df['Gender'] = df['Gender'].map({'Male': 1, 'Female': 0})

X = df.iloc[:, 1:4].values  
y = df.iloc[:, 4].values  

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

lr = LogisticRegression(random_state=0)
lr.fit(X_train, y_train)

observation = np.array([[0, 30, 87000]])  
print("Single Prediction:", lr.predict(observation))

observations = np.array([[0, 30, 87000], [1, 50, 45000], [1, 22, 30000]])
print("Multiple Predictions:", lr.predict(observations))

print("Model Accuracy:", lr.score(X_test, y_test))
